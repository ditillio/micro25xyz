---
schema: EconSchema
version: 1
aspectRatio: 1.5

params:

  - {name: x1, value: 5, min: 0, max: 9, round: 0.1}
  - {name: x2, value: 5, min: 0, max: 9, round: 0.1}
  - {name: s, value: 4, min: 0, max: 10}

  - {name: showMORE, value: false}
  - {name: showLESS, value: false}

# consumption levels on 45° line
  - {name: c1, value: 1}
  - {name: c2, value: 2}
  - {name: c3, value: 3}
  - {name: c4, value: 4}
  - {name: c5, value: 5}
  - {name: c6, value: 6}
  - {name: c7, value: 7}
  - {name: c8, value: 8}
  - {name: c9, value: 9}


calcs:
  u: (params.x1) * (params.x2) + (params.s) * ( (params.x1) + (params.x2) )

# utility levels
  u1: ((params.c1)*(params.c1))+((params.s)*((params.c1)+(params.c1)))
  u2: ((params.c2)*(params.c2))+((params.s)*((params.c2)+(params.c2)))
  u3: ((params.c3)*(params.c3))+((params.s)*((params.c3)+(params.c3)))
  u4: ((params.c4)*(params.c4))+((params.s)*((params.c4)+(params.c4)))
  u5: ((params.c5)*(params.c5))+((params.s)*((params.c5)+(params.c5)))
  u6: ((params.c6)*(params.c6))+((params.s)*((params.c6)+(params.c6)))
  u7: ((params.c7)*(params.c7))+((params.s)*((params.c7)+(params.c7)))
  u8: ((params.c8)*(params.c8))+((params.s)*((params.c8)+(params.c8)))
  u9: ((params.c9)*(params.c9))+((params.s)*((params.c9)+(params.c9)))

  xequiv: ((9)+(params.s)*(6))/(params.s)

layout:
  OneGraphPlusSidebar:
    graph:

      xAxis:
        orient: bottom
        min: 0
        max: 9.5
        ticks: 0
      yAxis:
        orient: left
        min: 0
        max: 9.5
        ticks: 0


      objects:

      - Label:
            coordinates: [9.5, 0]
            text: "` \\\\text{Mele (kg)} `"
            position: l
      - Label:
            coordinates: [0, 9.5]
            text: "` \\\\text{Arance (kg)}  `"



      # Preferred and less preferred bundles
      - Area:
          fn:   ( (calcs.u) - params.s * (x) ) / ( (x) + params.s )
          fill: blue
          above: true
          show: params.showMORE == true
      - Area:
          fn:   ( (calcs.u) - params.s * (x) ) / ( (x) + params.s )
          fill: red
          above: false
          show: params.showLESS == true
          min: 0.001

      # Indifference Curve at X
      - Curve:
          fn:   ( (calcs.u) - params.s * (x) ) / ( (x) + params.s )
          color: Black
          strokeWidth: 2
      
      # Indifference Map
      - Curve:
          fn:   ((calcs.u1)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5
          min: 0.01
      - Curve:
          fn:   ((calcs.u2)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5
      - Curve:
          fn:   ((calcs.u3)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5
      - Curve:
          fn:   ((calcs.u4)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5
      - Curve:
          fn:   ((calcs.u5)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5
      - Curve:
          fn:   ((calcs.u6)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5
      - Curve:
          fn:   ((calcs.u7)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5
      - Curve:
          fn:   ((calcs.u8)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5
      - Curve:
          fn:   ((calcs.u9)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5

            
      # Bundle
      - Point:
          coordinates: [params.x1, params.x2]
          droplines:
            horizontal: params.x2.toFixed(1)
            vertical: params.x1.toFixed(1)
          color: Blue
          r: 5
          draggable: true
      - Label:
          coordinates: [params.x1, params.x2+0.1]
          text: "` A `"
          position: l
          color: Black
          bgcolor: none
              


    explanation:
      divs:
        - html: "` Indicando rispettivamente con $X$ e $Y$ il consumo settimanale di mele 
                  e arance (entrambe misurate in chili), le preferenze del consumatore
                  sono descritte dalla funzione di utilità 
                  $$U(X,Y)=XY+${params.s}(X+Y)$$
                  Diversamente dall'Esempio 1, in questo caso le curve
                  d'indifferenza toccano gli assi. Per esempio, si può verificare che 
                  quando $s=4$ il paniere $(2,2)$
                  e il paniere $(5,0)$, che si trova
                  sull'asse orizzontale, appartengono alla stessa curva d'indifferenza
                  (entrambi danno un'utilità pari a $20$).
                    `"
          show: params.s > 1
        - html: "` Indicando rispettivamente con $X$ e $Y$ il consumo settimanale di mele 
                  e arance (entrambe misurate in chili), le preferenze del consumatore
                  sono descritte dalla funzione di utilità 
                  $$U(X,Y)=XY+(X+Y)$$
                  Diversamente dall'Esempio 1, in questo caso le curve
                  d'indifferenza toccano gli assi. Per esempio, il paniere $(2,2)$
                  e il paniere $(8,0)$, che si trova
                  sull'asse orizzontale, appartengono alla stessa curva d'indifferenza
                  (entrambi danno un'utilità pari a $8$).
                    `"
          show: params.s == 1
        - html: "` Indicando rispettivamente con $X$ e $Y$ il consumo settimanale di mele 
                  e arance (entrambe misurate in chili), le preferenze del consumatore
                  sono descritte dalla funzione di utilità 
                  $$U(X,Y)=XY$$
                  Tali preferenze sono identiche a quelle della Figura 2.2.`"
          show: params.s == 0

    sidebar:

      controls:

      - title: Preferenze del consumatore per beni divisibili (Esempio 2)

        checkboxes:
        - param: showMORE
          label: "\\text{Mostra panieri preferiti ad $A$}"
        - param: showLESS
          label: "\\text{Mostra panieri cui $A$ è preferito}"

        sliders:
        - param: s
          label: s

        # divs:
        #   - html: "`  `"
        #     show: calcs.u < 0
