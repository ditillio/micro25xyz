---
schema: EconSchema
version: 1
aspectRatio: 1.3
params:
  - {name: x1, value: 50, min: 10, max: 90, round: 1}
  - {name: x2, value: 50, min: 10, max: 90, round: 1}
  - {name: dx1, value: 10, min: -20, max: 20, round: 0.5}

  - {name: a, value: 1}
  - {name: b, value: 1}

# consumption levels on 45¬∞ line
  - {name: c1, value: 10}
  - {name: c2, value: 20}
  - {name: c3, value: 30}
  - {name: c4, value: 40}
  - {name: c5, value: 50}
  - {name: c6, value: 60}
  - {name: c7, value: 70}
  - {name: c8, value: 80}
  - {name: c9, value: 90}

  - {name: s, value: 4}


# which utility function
  - {name: whichU, value: 0}



calcs:

# utility at selected bundle
  u: ((params.x1)^(params.a))*((params.x2)^(params.b))

# MRS at selected bundle
  MRS0: (params.x2)/(params.x1)
  MRS1: (2)*(params.x2)/(params.x1)
  MRS2: (0.5)*(params.x2)/(params.x1)
  MRS3: ((params.x2)+(params.s))/((params.x1)+(params.s))

# utility levels (params.whichU=0)
  u1: ((params.c1))*((params.c1))
  u2: ((params.c2))*((params.c2))
  u3: ((params.c3))*((params.c3))
  u4: ((params.c4))*((params.c4))
  u5: ((params.c5))*((params.c5))
  u6: ((params.c6))*((params.c6))
  u7: ((params.c7))*((params.c7))
  u8: ((params.c8))*((params.c8))
  u9: ((params.c9))*((params.c9))

# utility levels (params.whichU=1)
  u11: ((params.c1)^(2))*((params.c1))
  u21: ((params.c2)^(2))*((params.c2))
  u31: ((params.c3)^(2))*((params.c3))
  u41: ((params.c4)^(2))*((params.c4))
  u51: ((params.c5)^(2))*((params.c5))
  u61: ((params.c6)^(2))*((params.c6))
  u71: ((params.c7)^(2))*((params.c7))
  u81: ((params.c8)^(2))*((params.c8))
  u91: ((params.c9)^(2))*((params.c9))

# utility levels (params.whichU=2)
  u12: ((params.c1))*((params.c1)^(2))
  u22: ((params.c2))*((params.c2)^(2))
  u32: ((params.c3))*((params.c3)^(2))
  u42: ((params.c4))*((params.c4)^(2))
  u52: ((params.c5))*((params.c5)^(2))
  u62: ((params.c6))*((params.c6)^(2))
  u72: ((params.c7))*((params.c7)^(2))
  u82: ((params.c8))*((params.c8)^(2))
  u92: ((params.c9))*((params.c9)^(2))

# utility levels (params.whichU=3)
  u13: ((params.c1)*(params.c1))+((params.s)*((params.c1)+(params.c1)))
  u23: ((params.c2)*(params.c2))+((params.s)*((params.c2)+(params.c2)))
  u33: ((params.c3)*(params.c3))+((params.s)*((params.c3)+(params.c3)))
  u43: ((params.c4)*(params.c4))+((params.s)*((params.c4)+(params.c4)))
  u53: ((params.c5)*(params.c5))+((params.s)*((params.c5)+(params.c5)))
  u63: ((params.c6)*(params.c6))+((params.s)*((params.c6)+(params.c6)))
  u73: ((params.c7)*(params.c7))+((params.s)*((params.c7)+(params.c7)))
  u83: ((params.c8)*(params.c8))+((params.s)*((params.c8)+(params.c8)))
  u93: ((params.c9)*(params.c9))+((params.s)*((params.c9)+(params.c9)))





  dx2: (params.x2)*((((params.x1)+(params.dx1))/(params.x1))^(-(params.a)/(params.b))-1)

  ratio: (calcs.dx2)/(params.dx1)

  x1new: (params.x1)+(params.dx1)
  x2new: (params.x2)+(calcs.dx2)

layout:
  OneGraphPlusSidebar:
    graph:
      xAxis:
        max: 95
        ticks: 0
      yAxis:
        max: 95
        ticks: 0



      objects:

      - Label:
            coordinates: [95, 0]
            text: "` \\\\text{Cibo (kg)} `"
            position: l
      - Label:
            coordinates: [0, 95]
            text: "` \\\\text{Alloggio (m$^2$)}  `"

# bundle
      - Point:
          coordinates: [params.x1, params.x2]
          droplines:
            horizontal: params.x2.toFixed(1)
            vertical: params.x1.toFixed(1)
          color: Blue
          r: 4
          strokeWidth: 0.5
          draggable: true
          # label:
          #   text: "` \\\\large{A} `"
          #   bgcolor: none


      # Indifference curve at bundle
      - Curve:
          fn: ((calcs.u)/((x)^(params.a)))^(1/(params.b))
          color: Black
          strokeWidth: 1.5
      
      # Indifference Map
      - Curve:
          fn:   ((calcs.u1)/((x)^(params.a)))^(1/(params.b))
          color: Grey
          strokeWidth: 0.25
          min: 0.04
      - Curve:
          fn:   ((calcs.u2)/((x)^(params.a)))^(1/(params.b))
          color: Grey
          strokeWidth: 0.25
          min: 0.15
      - Curve:
          fn:   ((calcs.u3)/((x)^(params.a)))^(1/(params.b))
          color: Grey
          strokeWidth: 0.25
          min: 0.05
      - Curve:
          fn:   ((calcs.u4)/((x)^(params.a)))^(1/(params.b))
          color: Grey
          strokeWidth: 0.25
          min: 0.01
      - Curve:
          fn:   ((calcs.u5)/((x)^(params.a)))^(1/(params.b))
          color: Grey
          strokeWidth: 0.25
          min: 0.01
      - Curve:
          fn:   ((calcs.u6)/((x)^(params.a)))^(1/(params.b))
          color: Grey
          strokeWidth: 0.25
          min: 0.01
      - Curve:
          fn:   ((calcs.u7)/((x)^(params.a)))^(1/(params.b))
          color: Grey
          strokeWidth: 0.25
          min: 0.01
      - Curve:
          fn:   ((calcs.u8)/((x)^(params.a)))^(1/(params.b))
          color: Grey
          strokeWidth: 0.25
          min: 0.01
      - Curve:
          fn:   ((calcs.u9)/((x)^(params.a)))^(1/(params.b))
          color: Grey
          strokeWidth: 0.25
          min: 0.01





# tangent at bundle
      - Line:
          point: [params.x1,params.x2]
          slope: -(calcs.MRS0)
          color: Blue
          min: params.x1-100
          max: params.x1+100
          strokeWidth: 0.5
          lineStyle: dashed
          show: params.whichU == 0
      - Line:
          point: [params.x1,params.x2]
          slope: -(calcs.MRS1)
          color: Blue
          min: params.x1-100
          max: params.x1+100
          strokeWidth: 0.5
          lineStyle: dashed
          show: params.whichU == 1
      - Line:
          point: [params.x1,params.x2]
          slope: -(calcs.MRS2)
          color: Blue
          min: params.x1-100
          max: params.x1+100
          strokeWidth: 0.5
          lineStyle: dashed
          show: params.whichU == 2
      - Line:
          point: [params.x1,params.x2]
          slope: -(calcs.MRS3)
          color: Blue
          min: params.x1-100
          max: params.x1+100
          strokeWidth: 0.5
          lineStyle: dashed
          show: params.whichU == 3






    sidebar:
      controls:
      - title: Utilit√† marginali e saggio marginale di sostituzione
        radioGroup:
          param: whichU
          options:
            - $U=XY$
            - $U=X^2Y$
            - $U=XY^2$
            - $U=XY+4(X+Y)$
        description: Selezionare una funzione di utilit√† e poi un paniere per calcolare utilit√† marginali e 
                    saggio marginale di sostituzione di ùëã con ùëå in quel paniere.

      - title: "` `"
        divs:
          - html: "`  `"
          - html: "` In questo caso abbiamo $MU_X=Y$ e $MU_Y=X$, quindi 
                    $$ MRS_{XY} = \\\\dfrac{Y}{X} $$  `"
        sliders:
        - param: x1
          label: X
        - param: x2
          label: Y
        show: params.whichU == 0

      - title: "` `"
        divs:
          - html: "`  `"
          - html: "` In questo caso abbiamo $MU_X=2XY$ e $MU_Y=X^2$, quindi 
                    $$ MRS_{XY} = \\\\dfrac{2Y}{X} $$  `"
        sliders:
        - param: x1
          label: X
        - param: x2
          label: Y
        show: params.whichU == 1

      - title: "` `"
        divs:
          - html: "`  `"
          - html: "` In questo caso abbiamo $MU_X=Y^2$ e $MU_Y=2XY$, quindi 
                    $$ MRS_{XY} = \\\\dfrac{Y}{2X} $$  `"
        sliders:
        - param: x1
          label: X
        - param: x2
          label: Y
        show: params.whichU == 2

      - title: "` `"
        divs:
          - html: "`  `"
          - html: "` In questo caso abbiamo $MU_X=Y+4$ e $MU_Y=X+4$, quindi 
                    $$ MRS_{XY} = \\\\dfrac{Y+4}{X+4} $$  `"
        sliders:
        - param: x1
          label: X
        - param: x2
          label: Y
        show: params.whichU == 3









    explanation:

        divs:

          - html: "` `"

          - html: "` In corrispondenza del paniere $(${params.x1},${params.x2})$
                      le utilit√† marginali sono $MU_X=${params.x2}$ e $MU_Y=${params.x1}$.
                     Il saggio marginale di sostituzione di $X$ con $Y$ √® quindi
                     $MRS_{XY} = ${params.x2} / ${params.x1} = ${calcs.MRS0}. $
                     `"
            show: params.whichU == 0

          - html: "` In corrispondenza del paniere $(${params.x1},${params.x2})$
                      le utilit√† marginali sono $MU_X=${(2)*(params.x1)*(params.x2)}$ e
                      $MU_Y=${(params.x1)*(params.x1)}$.
                     Il saggio marginale di sostituzione di $X$ con $Y$ √® quindi
                     $MRS_{XY} = 2 ${params.x2} / ${params.x1} = ${calcs.MRS1}. $
                     `"
            show: params.whichU == 1

          - html: "` In corrispondenza del paniere $(${params.x1},${params.x2})$
                      le utilit√† marginali sono $MU_X=${(params.x2)*(params.x2)}$
                      e $MU_Y=${(2)*(params.x1)*(params.x2)}$.
                     Il saggio marginale di sostituzione di $X$ con $Y$ √® quindi
                     $MRS_{XY} = ${params.x2} / (2 \\\\times ${params.x1} ) = ${calcs.MRS2}. $
                     `"
            show: params.whichU == 2

          - html: "` In corrispondenza del paniere $(${params.x1},${params.x2})$
                      le utilit√† marginali sono $MU_X=${(params.x2)+(params.s)}$
                      e $MU_Y=${(params.x1)+(params.s)}$.
                     Il saggio marginale di sostituzione di $X$ con $Y$ √® quindi
                     $MRS_{XY} = (${params.x2}+${params.s}) / (${params.x1}+${params.s}) = ${calcs.MRS3}. $
                     `"
            show: params.whichU == 3













