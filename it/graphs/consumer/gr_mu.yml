---
schema: EconSchema
version: 1

aspectRatio: 1.3

# aspectRatio: 1

params:

- {name: x1, value: 50, min: 40, max: 60, round: 1}
- {name: x2, value: 60, min: 30, max: 60, round: 1}
- {name: dx1, value: 20, min: -20, max: 20, round: 0.5}
- {name: dx2, value: 20, min: -20, max: 20, round: 0.5}

- {name: which, value: 0}

calcs:
  u: ((params.x1)^2)*(params.x2)

  MU1: (2)*(params.x1)*(params.x2)
  MU2: ((params.x1)^2)

  x1new: (params.x1)+(params.dx1)
  unew1: ((calcs.x1new)^2)*(params.x2)

  x2new: (params.x2)+(params.dx2)
  unew2: ((params.x1)^2)*(calcs.x2new)

  maxMU: (17100)-((params.which)-(1))*(9000) # max displayed marginal utility level

  Ulabel: min(95,sqrt((348000)/(params.x2)))

layout:
  # TwoVerticalGraphsPlusSidebar:

  OneGraphPlusSidebar:

    # topGraph:

    graph:
      xAxis:
        max: 95
        ticks: 0
      yAxis:
        max: 350000
        ticks: 0

      objects:

        - Label:
              coordinates: [95, 0]
              text: "` \\\\text{Cibo (kg)} `"
              position: l
              show: params.which == 1
        - Label:
            coordinates: [95, 0]
            text: "` \\\\text{Alloggio (m$^2$)} `"
            position: l
            show: params.which == 2
        - Label:
              coordinates: [0, 350000]
              text: "` \\\\text{Utilità}  `"

# utility given Y
        - Curve:
            fn: "((x)^2)*(params.x2)"
            strokeWidth: 1.5
            color: Red
            opacity: 0.4
            label:
              text: "` U = ${params.x2} X^2 `"
              x: calcs.Ulabel
              position: c
            show: params.which == 1
        - Point:
            coordinates: [params.x1,calcs.u]
            droplines:
              vertical: params.x1
              horizontal: calcs.u
            color: Blue
            strokeWidth: 0.5
            r: 3
            show: params.which == 1
        - Point:
            coordinates: [calcs.x1new,calcs.unew1]
            droplines:
              vertical: calcs.x1new.toFixed(1)
              horizontal: calcs.unew1
            color: Red
            strokeWidth: 0.5
            r: 3
            show: params.which == 1

# tangent to utility given Y
        - Line:
            point: [params.x1,calcs.u]
            slope: 2*(params.x1)*(params.x2)
            color: Blue
            min: (params.x1)-100
            max: (params.x1)+100
            strokeWidth: 0.8
            lineStyle: dashed
            show: params.which == 1

# positive variation in X
        - Arrow:
            begin: [params.x1,8000]
            end: [calcs.x1new,8000]
            trim: 0.02
            color: Green
            show: params.dx1 > 0 && params.which == 1
        - Label:
            coordinates: [((params.x1)+(calcs.x1new))/2, 20000]
            text: "` \\\\Delta X = ${params.dx1.toFixed(1)} `"
            color: Green
            show: params.dx1 > 0 && params.which == 1
# negative variation in X
        - Arrow:
            begin: [params.x1,8000]
            end: [calcs.x1new,8000]
            trim: 0.02
            color: Red
            show: params.dx1 < 0 && params.which == 1
        - Label:
            coordinates: [((params.x1)+(calcs.x1new))/2, 20000]
            text: "` \\\\Delta X = ${params.dx1.toFixed(1)}  `"
            color: Red
            show: params.dx1 < 0 && params.which == 1
# positive variation in U
        - Arrow:
            begin: [3, calcs.u]
            end: [3, calcs.unew1]
            trim: 0.02
            color: Green
            show: params.dx1 > 0 && params.which == 1
        - Label:
            coordinates: [3, ((calcs.u)+(calcs.unew1))/2]
            text: "` \\\\Delta U = ${(calcs.unew1)-(calcs.u)}`"
            color: Green
            position: l
            show: params.dx1 > 0 && params.which == 1
# negative variation in U
        - Arrow:
            begin: [3, calcs.u]
            end: [3, calcs.unew1]
            trim: 0.02
            color: Red
            show: params.dx1 < 0 && params.which == 1
        - Label:
            coordinates: [3, ((calcs.u)+(calcs.unew1))/2]
            text: "` \\\\Delta U = ${(calcs.unew1)-(calcs.u)}`"
            color: Red
            position: l
            show: params.dx1 < 0 && params.which == 1










# utility given X
        - Curve:
            fn: "((params.x1)*(params.x1))*(x)"
            strokeWidth: 1.5
            color: Red
            opacity: 0.4
            label:
              text: "` U = ${(params.x1)*(params.x1)} Y `"
              x: 95
              position: c
            show: params.which == 2
        - Point:
            coordinates: [params.x2,calcs.u]
            droplines:
              vertical: params.x2
              horizontal: 
            color: Blue
            strokeWidth: 0.5
            r: 4
            show: params.which == 2
        - Point:
            coordinates: [calcs.x2new,calcs.unew2]
            droplines:
              vertical: calcs.x2new.toFixed(1)
              horizontal: calcs.unew1
            color: Red
            strokeWidth: 0.5
            r: 3
            show: params.which == 2

# tangent to utility given X
        - Line:
            point: [params.x2,calcs.u]
            slope: (params.x1)^(2)
            color: Blue
            min: (params.x2)-100
            max: (params.x2)+100
            strokeWidth: 0.8
            lineStyle: dashed
            show: params.which == 2

# positive variation in Y
        - Arrow:
            begin: [params.x2,8000]
            end: [calcs.x2new,8000]
            trim: 0.02
            color: Green
            show: params.dx2 > 0 && params.which == 2
        - Label:
            coordinates: [((params.x2)+(calcs.x2new))/2, 20000]
            text: "` \\\\Delta Y = ${params.dx2.toFixed(1)} `"
            color: Green
            show: params.dx2 > 0 && params.which == 2
# negative variation in X
        - Arrow:
            begin: [params.x2,8000]
            end: [calcs.x2new,8000]
            trim: 0.02
            color: Red
            show: params.dx2 < 0 && params.which == 2
        - Label:
            coordinates: [((params.x2)+(calcs.x2new))/2, 20000]
            text: "` \\\\Delta Y = ${params.dx2.toFixed(1)}  `"
            color: Red
            show: params.dx2 < 0 && params.which == 2
# positive variation in U
        - Arrow:
            begin: [3, calcs.u]
            end: [3, calcs.unew2]
            trim: 0.02
            color: Green
            show: params.dx2 > 0 && params.which == 2
        - Label:
            coordinates: [3, ((calcs.u)+(calcs.unew2))/2]
            text: "` \\\\Delta U = ${(calcs.unew2)-(calcs.u)}`"
            color: Green
            position: l
            show: params.dx2 > 0 && params.which == 2
# negative variation in U
        - Arrow:
            begin: [3, calcs.u]
            end: [3, calcs.unew2]
            trim: 0.02
            color: Red
            show: params.dx2 < 0 && params.which == 2
        - Label:
            coordinates: [3, ((calcs.u)+(calcs.unew2))/2]
            text: "` \\\\Delta U = ${(calcs.unew2)-(calcs.u)}`"
            color: Red
            position: l
            show: params.dx2 < 0 && params.which == 2














#     bottomGraph:
#       xAxis:
#         max: 95
#         ticks: 0
#       yAxis:
#         max: calcs.maxMU
#         ticks: 0

#       objects:

#         - Label:
#             coordinates: [95, 0]
#             text: "` \\\\text{Cibo (kg)} `"
#             position: l
#             show: params.which == 1
#         - Label:
#             coordinates: [0, calcs.maxMU]
#             text: "` \\\\text{Utilità/kg}  `"
#             show: params.which == 1

#         - Label:
#             coordinates: [95, 0]
#             text: "` \\\\text{Alloggio (m$^2$)} `"
#             position: l
#             show: params.which == 2
#         - Label:
#             coordinates: [0, calcs.maxMU]
#             text: "` \\\\text{Utilità/m$^2$}  `"
#             show: params.which == 2

# # marginal utility of X
#         - Line:
#             slope: (2)*(params.x2)
#             strokeWidth: 1.5
#             color: Red
#             opacity: 0.4
#             label:
#               text: "` MU_X = ${(2)*(params.x2)} X `"
#               x: 95
#               position: c
#             show: params.which == 1
#         - Point:
#             coordinates: [params.x1,calcs.MU1]
#             droplines:
#               vertical: params.x1
#               horizontal: calcs.MU1
#             color: Blue
#             strokeWidth: 0.5
#             r: 4
#             show: params.which == 1


# # marginal utility of Y
#         - Line:
#             yIntercept: (calcs.MU2)
#             strokeWidth: 1.5
#             color: Red
#             opacity: 0.4
#             label:
#               text: "` MU_Y = ${calcs.MU2} `"
#               x: 95
#               position: c
#             show: params.which == 2
#         - Point:
#             coordinates: [params.x2,calcs.MU2]
#             droplines:
#               vertical: params.x2
#               horizontal: calcs.MU2
#             color: Blue
#             strokeWidth: 0.5
#             r: 4
#             show: params.which == 2




    sidebar:
      controls:
      - title: Utilità marginali
        description: Scegliere un paniere e poi variare il consumo di uno dei due beni per vedere come
                        varia l'utilità.
        radioGroup:
          param: which
          options:
            - Non variare consumo
            - Varia consumo bene 𝑋
            - Varia consumo bene 𝑌
        sliders:
          - param: x1
            label: X
          - param: x2
            label: Y



      - title: Utilità marginale del bene 𝑋
        # description: Bla bla bla
        sliders:
          - param: dx1
            label: \Delta X
        divs:
          - html: "` A partire dal paniere $(${params.x1},${params.x2})$, una variazione
                    $\\\\Delta X=${params.dx1}$ nel consumo del bene $X$ provoca una variazione
                     $\\\\Delta U=${(calcs.unew1)-(calcs.u)}$ nell'utilità. Abbiamo quindi
                     $$ \\\\dfrac{\\\\Delta U}{\\\\Delta X} = ${((calcs.unew1)-(calcs.u))/(params.dx1)} $$
                      `"
            show: params.dx1 !== 0
          - html: "` A partire dal paniere $(${params.x1},${params.x2})$, una variazione
                    $\\\\Delta X \\\\to 0$ nel consumo del bene $X$ provoca una variazione
                     $\\\\Delta U \\\\to 0$ nell'utilità. Abbiamo quindi
                     $$ \\\\dfrac{\\\\Delta U}{\\\\Delta X} \\\\to MU_X = ${calcs.MU1} $$
                      `"
            show: params.dx1 == 0
        show: params.which == 1 





      - title: Utilità marginale del bene 𝑌
        # description: Bla bla bla
        sliders:
          - param: dx2
            label: \Delta Y
        divs:
          - html: "` A partire dal paniere $(${params.x1},${params.x2})$, una variazione
                    $\\\\Delta Y=${params.dx2}$ nel consumo del bene $Y$ provoca una variazione
                     $\\\\Delta U=${(calcs.unew2)-(calcs.u)}$ nell'utilità. Abbiamo quindi
                     $$ \\\\dfrac{\\\\Delta U}{\\\\Delta Y} = ${((calcs.unew2)-(calcs.u))/(params.dx2)} $$
                      `"
            show: params.dx2 !== 0
          - html: "` A partire dal paniere $(${params.x1},${params.x2})$, una variazione
                    $\\\\Delta Y \\\\to 0$ nel consumo del bene $Y$ provoca una variazione
                     $\\\\Delta U \\\\to 0$ nell'utilità. Abbiamo quindi
                     $$ \\\\dfrac{\\\\Delta U}{\\\\Delta Y} \\\\to MU_Y = ${calcs.MU2} $$
                      `"
            show: params.dx2 == 0
        show: params.which == 2




    explanation:
        divs:
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` La funzione di utilità del consumatore è $U(X,Y)=X^2Y$. Tenendo fermo il consumo del bene $Y$
                      a $Y=${params.x2}$ unità, l'utilità diventa $U=${params.x2}X^2$.
                      L'utilità marginale del bene $X$ è dunque $MU_X=${2*(params.x2)}X$. In corrispondenza 
                      del paniere $(${params.x1},${params.x2})$ abbiamo quindi
                      $$ MU_X = ${calcs.MU1}  $$  `"
            show: params.which == 1
          - html: "` Riducendo il valore assoluto di $\\\\Delta X$ si verifica che 
                    $MU_X$ è il limite a cui tende il rapporto
                    $\\\\Delta U / \\\\Delta X$ al tendere di $\\\\Delta X$ a zero. `"
            show: params.which == 1

          - html: "` La funzione di utilità del consumatore è $U(X,Y)=X^2Y$. Tenendo fermo il consumo del bene $X$
                      a $X=${params.x1}$ unità, l'utilità diventa $U=${(params.x1)*(params.x1)}Y$.
                      L'utilità marginale del bene $Y$ è dunque $MU_Y=${(params.x1)*(params.x1)}$. In corrispondenza 
                      del paniere $(${params.x1},${params.x2})$ abbiamo quindi
                      $$ MU_Y = ${calcs.MU2}  $$  `"
            show: params.which == 2
          - html: "` Riducendo il valore assoluto di $\\\\Delta Y$ si verifica che 
                    $MU_Y$ è il limite a cui tende il rapporto
                    $\\\\Delta U / \\\\Delta Y$ al tendere di $\\\\Delta Y$ a zero. `"
            show: params.which == 2







