---
schema: EconSchema
version: 1

aspectRatio: 1.3

# aspectRatio: 1

params:

- {name: x1, value: 5, min: 4, max: 6, round: 0.1}
- {name: x2, value: 6, min: 3, max: 6, round: 0.1}
- {name: dx1, value: 2, min: -2, max: 2, round: 0.05}
- {name: dx2, value: 2, min: -2, max: 2, round: 0.05}

- {name: which, value: 0}

calcs:
  u: ((params.x1)^2)*(params.x2)

  MU1: (2)*(params.x1)*(params.x2)
  MU2: ((params.x1)^2)

  x1new: (params.x1)+(params.dx1)
  unew1: ((calcs.x1new)^2)*(params.x2)
  uvar1: (calcs.unew1)-(calcs.u)

  x2new: (params.x2)+(params.dx2)
  unew2: ((params.x1)^2)*(calcs.x2new)
  uvar2: (calcs.unew2)-(calcs.u)

  maxMU: (171)-((params.which)-(1))*(90) # max displayed marginal utility level

  Ulabel1: min(9.5,sqrt((384)/(params.x2)))

  x1square: (params.x1)^(2)

  dudx1: (calcs.uvar1)/(params.dx1)
  dudx2: (calcs.uvar2)/(params.dx2)

layout:
  # TwoVerticalGraphsPlusSidebar:

  OneGraphPlusSidebar:

    # topGraph:

    graph:
      xAxis:
        max: 9.5
        ticks: 0
      yAxis:
        max: 385
        ticks: 0

      objects:

        - Label:
              coordinates: [9.5, 0]
              text: "` \\\\text{Unità di $X$} `"
              position: l
              show: params.which == 1
        - Label:
            coordinates: [9.5, 0]
            text: "` \\\\text{Unità di $Y$} `"
            position: l
            show: params.which == 2
        - Label:
              coordinates: [0, 385]
              text: "` \\\\text{Utilità}  `"

# utility given Y
        - Curve:
            fn: "((x)^2)*(params.x2)"
            strokeWidth: 1.5
            color: Red
            opacity: 0.4
            label:
              text: "` U = ${params.x2.toFixed(1)} X^2 `"
              x: calcs.Ulabel1
              position: c
            show: params.which == 1
        - Point:
            coordinates: [params.x1,calcs.u]
            droplines:
              vertical: params.x1.toFixed(1)
              horizontal: calcs.u.toFixed(2)
            color: Blue
            strokeWidth: 0.5
            r: 3
            show: params.which == 1
        - Point:
            coordinates: [calcs.x1new,calcs.unew1]
            droplines:
              vertical: calcs.x1new.toFixed(1)
              horizontal: calcs.unew1.toFixed(2)
            color: Red
            strokeWidth: 0.5
            r: 3
            show: params.which == 1

# tangent to utility given Y
        - Line:
            point: [params.x1,calcs.u]
            slope: 2*(params.x1)*(params.x2)
            color: Blue
            min: (params.x1)-100
            max: (params.x1)+100
            strokeWidth: 0.8
            lineStyle: dashed
            show: params.which == 1

# positive variation in X
        - Arrow:
            begin: [params.x1,8]
            end: [calcs.x1new,8]
            trim: 0.02
            color: Green
            show: params.dx1 > 0 && params.which == 1
        - Label:
            coordinates: [((params.x1)+(calcs.x1new))/2, 20]
            text: "` \\\\Delta X = ${params.dx1.toFixed(1)} `"
            color: Green
            show: params.dx1 > 0 && params.which == 1
# negative variation in X
        - Arrow:
            begin: [params.x1,8]
            end: [calcs.x1new,8]
            trim: 0.02
            color: Red
            show: params.dx1 < 0 && params.which == 1
        - Label:
            coordinates: [((params.x1)+(calcs.x1new))/2, 20]
            text: "` \\\\Delta X = ${params.dx1.toFixed(1)}  `"
            color: Red
            show: params.dx1 < 0 && params.which == 1
# positive variation in U
        - Arrow:
            begin: [0.3, calcs.u]
            end: [0.3, calcs.unew1]
            trim: 0.02
            color: Green
            show: params.dx1 > 0 && params.which == 1
        - Label:
            coordinates: [0.3, ((calcs.u)+(calcs.unew1))/2]
            text: "` \\\\Delta U = ${calcs.uvar1.toFixed(2)}`"
            color: Green
            position: l
            show: params.dx1 > 0 && params.which == 1
# negative variation in U
        - Arrow:
            begin: [0.3, calcs.u]
            end: [0.3, calcs.unew1]
            trim: 0.02
            color: Red
            show: params.dx1 < 0 && params.which == 1
        - Label:
            coordinates: [0.3, ((calcs.u)+(calcs.unew1))/2]
            text: "` \\\\Delta U = ${calcs.uvar1.toFixed(2)}`"
            color: Red
            position: l
            show: params.dx1 < 0 && params.which == 1










# utility given X
        - Curve:
            fn: "(calcs.x1square)*(x)"
            strokeWidth: 1.5
            color: Red
            opacity: 0.4
            label:
              text: "` U = ${(calcs.x1square.toFixed(2))} Y `"
              x: 9.5
              position: c
            show: params.which == 2
        - Point:
            coordinates: [params.x2,calcs.u]
            droplines:
              vertical: params.x2.toFixed(1)
              horizontal: 
            color: Blue
            strokeWidth: 0.5
            r: 4
            show: params.which == 2
        - Point:
            coordinates: [calcs.x2new,calcs.unew2]
            droplines:
              vertical: calcs.x2new.toFixed(1)
              horizontal: calcs.unew1.toFixed(2)
            color: Red
            strokeWidth: 0.5
            r: 3
            show: params.which == 2

# tangent to utility given X
        - Line:
            point: [params.x2,calcs.u]
            slope: calcs.x1square
            color: Blue
            min: (params.x2)-100
            max: (params.x2)+100
            strokeWidth: 0.8
            lineStyle: dashed
            show: params.which == 2

# positive variation in Y
        - Arrow:
            begin: [params.x2,8]
            end: [calcs.x2new,8]
            trim: 0.02
            color: Green
            show: params.dx2 > 0 && params.which == 2
        - Label:
            coordinates: [((params.x2)+(calcs.x2new))/2, 20]
            text: "` \\\\Delta Y = ${params.dx2.toFixed(1)} `"
            color: Green
            show: params.dx2 > 0 && params.which == 2
# negative variation in Y
        - Arrow:
            begin: [params.x2,8]
            end: [calcs.x2new,8]
            trim: 0.02
            color: Red
            show: params.dx2 < 0 && params.which == 2
        - Label:
            coordinates: [((params.x2)+(calcs.x2new))/2, 20]
            text: "` \\\\Delta Y = ${params.dx2.toFixed(1)}  `"
            color: Red
            show: params.dx2 < 0 && params.which == 2
# positive variation in U
        - Arrow:
            begin: [0.3, calcs.u]
            end: [0.3, calcs.unew2]
            trim: 0.02
            color: Green
            show: params.dx2 > 0 && params.which == 2
        - Label:
            coordinates: [0.3, ((calcs.u)+(calcs.unew2))/2]
            text: "` \\\\Delta U = ${calcs.uvar2.toFixed(2)}`"
            color: Green
            position: l
            show: params.dx2 > 0 && params.which == 2
# negative variation in U
        - Arrow:
            begin: [0.3, calcs.u]
            end: [0.3, calcs.unew2]
            trim: 0.02
            color: Red
            show: params.dx2 < 0 && params.which == 2
        - Label:
            coordinates: [0.3, ((calcs.u)+(calcs.unew2))/2]
            text: "` \\\\Delta U = ${calcs.uvar2.toFixed(2)}`"
            color: Red
            position: l
            show: params.dx2 < 0 && params.which == 2














#     bottomGraph:
#       xAxis:
#         max: 95
#         ticks: 0
#       yAxis:
#         max: calcs.maxMU
#         ticks: 0

#       objects:

#         - Label:
#             coordinates: [95, 0]
#             text: "` \\\\text{Cibo (kg)} `"
#             position: l
#             show: params.which == 1
#         - Label:
#             coordinates: [0, calcs.maxMU]
#             text: "` \\\\text{Utilità/kg}  `"
#             show: params.which == 1

#         - Label:
#             coordinates: [95, 0]
#             text: "` \\\\text{Alloggio (m$^2$)} `"
#             position: l
#             show: params.which == 2
#         - Label:
#             coordinates: [0, calcs.maxMU]
#             text: "` \\\\text{Utilità/m$^2$}  `"
#             show: params.which == 2

# # marginal utility of X
#         - Line:
#             slope: (2)*(params.x2)
#             strokeWidth: 1.5
#             color: Red
#             opacity: 0.4
#             label:
#               text: "` MU_X = ${(2)*(params.x2)} X `"
#               x: 95
#               position: c
#             show: params.which == 1
#         - Point:
#             coordinates: [params.x1,calcs.MU1]
#             droplines:
#               vertical: params.x1
#               horizontal: calcs.MU1
#             color: Blue
#             strokeWidth: 0.5
#             r: 4
#             show: params.which == 1


# # marginal utility of Y
#         - Line:
#             yIntercept: (calcs.MU2)
#             strokeWidth: 1.5
#             color: Red
#             opacity: 0.4
#             label:
#               text: "` MU_Y = ${calcs.MU2} `"
#               x: 95
#               position: c
#             show: params.which == 2
#         - Point:
#             coordinates: [params.x2,calcs.MU2]
#             droplines:
#               vertical: params.x2
#               horizontal: calcs.MU2
#             color: Blue
#             strokeWidth: 0.5
#             r: 4
#             show: params.which == 2




    sidebar:
      controls:
      - title: Utilità marginali
        description: Scegliere un paniere e poi variare il consumo di uno dei due beni per vedere come
                        varia l'utilità.
        radioGroup:
          param: which
          options:
            - Non variare consumo
            - Varia consumo bene 𝑋
            - Varia consumo bene 𝑌
        sliders:
          - param: x1
            label: X
          - param: x2
            label: Y



      - title: Utilità marginale del bene 𝑋
        # description: Bla bla bla
        sliders:
          - param: dx1
            label: \Delta X
        divs:
          - html: "` A partire dal paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$, una variazione pari a
                    $\\\\Delta X=${params.dx1.toFixed(2)}$ nel consumo di $X$ provoca una variazione pari a 
                     $$
                     \\\\Delta U=U(${calcs.x1new.toFixed(2)},${params.x2.toFixed(1)})-U(${params.x1.toFixed(1)},${params.x2.toFixed(1)})=${calcs.uvar1.toFixed(2)}
                     $$
                     nell'utilità. Abbiamo quindi
                     $$
                     \\\\dfrac{\\\\Delta U}{\\\\Delta X} = \\\\dfrac{${calcs.uvar1.toFixed(2)}}{${params.dx1.toFixed(2)}} = ${calcs.dudx1.toFixed(2)}
                     $$
                      `"
            show: params.dx1 !== 0
          - html: "` A partire dal paniere $(${params.x1},${params.x2})$, una variazione
                    $\\\\Delta X \\\\to 0$ nel consumo del bene $X$ provoca una variazione
                     $\\\\Delta U \\\\to 0$ nell'utilità. Abbiamo quindi
                     $$ \\\\dfrac{\\\\Delta U}{\\\\Delta X} \\\\to MU_X = ${calcs.MU1.toFixed(2)} $$
                      `"
            show: params.dx1 == 0
        show: params.which == 1 





      - title: Utilità marginale del bene 𝑌
        # description: Bla bla bla
        sliders:
          - param: dx2
            label: \Delta Y
        divs:
          - html: "` A partire dal paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$, una variazione pari a
                    $\\\\Delta Y=${params.dx2.toFixed(2)}$ nel consumo di $Y$ provoca una variazione pari a
                     $$
                     \\\\Delta U=U(${params.x1.toFixed(1)},${calcs.x2new.toFixed(2)})-U(${params.x1.toFixed(1)},${params.x2.toFixed(1)})=${calcs.uvar2.toFixed(2)}
                     $$
                     nell'utilità. Abbiamo quindi
                     $$
                     \\\\dfrac{\\\\Delta U}{\\\\Delta Y} = \\\\dfrac{${calcs.uvar2.toFixed(2)}}{${params.dx2.toFixed(2)}} = ${calcs.dudx2.toFixed(2)}
                     $$
                      `"
            show: params.dx2 !== 0
          - html: "` A partire dal paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$, una variazione
                    $\\\\Delta Y \\\\to 0$ nel consumo del bene $Y$ provoca una variazione
                     $\\\\Delta U \\\\to 0$ nell'utilità. Abbiamo quindi
                     $$ \\\\dfrac{\\\\Delta U}{\\\\Delta Y} \\\\to MU_Y = ${calcs.MU2} $$
                      `"
            show: params.dx2 == 0
        show: params.which == 2




    explanation:
        divs:
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` `"
            show: params.which == 0
          - html: "` La funzione di utilità del consumatore è $U(X,Y)=X^2Y$. Tenendo fermo il consumo del bene $Y$
                      a $Y=${params.x2.toFixed(1)}$ unità, l'utilità diventa $U=${params.x2.toFixed(1)}X^2$.
                      L'utilità marginale del bene $X$ è dunque $MU_X=${2*(params.x2.toFixed(1))}X$. In corrispondenza 
                      del paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$ abbiamo quindi
                      $$ MU_X = ${calcs.MU1.toFixed(2)}  $$  `"
            show: params.which == 1
          - html: "` Riducendo il valore assoluto di $\\\\Delta X$ si verifica che 
                    $MU_X$ è il limite a cui tende il rapporto
                    $\\\\Delta U / \\\\Delta X$ al tendere di $\\\\Delta X$ a zero. `"
            show: params.which == 1

          - html: "` La funzione di utilità del consumatore è $U(X,Y)=X^2Y$. Tenendo fermo il consumo del bene $X$
                      a $X=${params.x1.toFixed(1)}$ unità, l'utilità diventa $U=${calcs.x1square.toFixed(2)}Y$.
                      L'utilità marginale del bene $Y$ è dunque $MU_Y=${calcs.x1square.toFixed(2)}$. In corrispondenza 
                      del paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$ abbiamo quindi
                      $$ MU_Y = ${calcs.MU2.toFixed(2)}  $$  `"
            show: params.which == 2
          - html: "` Riducendo il valore assoluto di $\\\\Delta Y$ si verifica che 
                    $MU_Y$ è il limite a cui tende il rapporto
                    $\\\\Delta U / \\\\Delta Y$ al tendere di $\\\\Delta Y$ a zero 
                    (in questo esempio l'utilità
                    marginale di $Y$ è costante e quindi il rapporto $\\\\Delta U / \\\\Delta Y$ è pari a $MU_X$
                    anche quando il valore assoluto di $\\\\Delta Y$ non è piccolo).
                      `"
            show: params.which == 2







