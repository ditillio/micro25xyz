---
schema: EconSchema
version: 1
aspectRatio: 1.7

params:

  - {name: x1, value: 3, min: 0, max: 5, round: 0.5}
  - {name: x2, value: 3, min: 0, max: 5, round: 0.5}
  - {name: s, value: 4, min: 0, max: 10}

  - {name: m, value: 8}
  - {name: p1, value: 2, min: 2, max: 5}
  - {name: p2, value: 2, min: 2, max: 5}

  - {name: which, value: 0}


calcs:

  pp1: (params.p1) + min((3)*(params.which),(6)-(3)*(params.which))
  pp2: (params.p2) + max((0),(3)*(params.which)-(3))

  u: (params.x1) * (params.x2) + (params.s) * ( (params.x1) + (params.x2) )

  cost: (calcs.pp1)*(params.x1)+(calcs.pp2)*(params.x2)

  MRS: ((params.x2)+(params.s))/((params.x1)+(params.s))

  MRScornerX: (params.s)/(((params.m)/(calcs.pp1))+(params.s))  # MRS at X corner
  MRScornerY: (((params.m)/(calcs.pp2))+(params.s))/(params.s)   # MRS at Y corner
  r: (calcs.pp1)/(calcs.pp2) # price ratio

  cornerXcheck: max( 0 , (calcs.MRScornerX)-(calcs.r)  )  # equals zero if optimal solution is NOT at X corner
  cornerYcheck: max( 0 , (calcs.r)-(calcs.MRScornerY)  )  # equals zero if optimal solution is NOT at Y corner
  interiorcheck: max(calcs.cornerXcheck,calcs.cornerYcheck)  # equals zero if optimal solution is interior

  u1: (0.5) * ( (0.5) + (2) * (params.s) )
  u2: (1) * ( (1) + (2) * (params.s) )
  u3: ( (1) * (2) ) + ( (params.s) * ( (1) + (2) ) )
  u4: (2) * ( (2) + (2) * (params.s) )
  u5: (2.5) * ( (2.5) + (2) * (params.s) )
  u6: (3) * ( (3) + (2) * (params.s) )
  u7: (3.5) * ( (3.5) + (2) * (params.s) )
  u8: (4) * ( (4) + (2) * (params.s) )
  u9: (4.5) * ( (4.5) + (2) * (params.s) )



layout:
  OneGraphPlusSidebar:
    graph:

      xAxis:
        orient: bottom
        min: 0
        max: 5
        ticks: 0
      yAxis:
        orient: left
        min: 0
        max: 5
        ticks: 0


      objects:

      - Label:
            coordinates: [5, 0]
            text: "` \\\\text{Mele (kg)} `"
            position: l
      - Label:
            coordinates: [0, 5]
            text: "` \\\\text{Arance (kg)}  `"



      # Bundles preferred to X
      - Area:
          fn:   ( (calcs.u) - params.s * (x) ) / ( (x) + params.s )
          fill: pink
          above: true

      # Indifference Curve at X
      - Curve:
          fn:   ( (calcs.u) - params.s * (x) ) / ( (x) + params.s )
          color: Black
          strokeWidth: 2
      
      # Indifference Map
      - Curve:
          fn:   ((calcs.u1)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5
          min: 0.01
      - Curve:
          fn:   ((calcs.u2)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5
      - Curve:
          fn:   ((calcs.u3)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5
      - Curve:
          fn:   ((calcs.u4)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5
      - Curve:
          fn:   ((calcs.u5)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5
      - Curve:
          fn:   ((calcs.u6)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5
      - Curve:
          fn:   ((calcs.u7)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5
      - Curve:
          fn:   ((calcs.u8)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5
      - Curve:
          fn:   ((calcs.u9)-(params.s)*(x))/((x)+(params.s))
          color: Grey
          strokeWidth: 0.5

      # BudgetLine
      - Line:
          point: [0,(params.m)/(calcs.pp2)]
          slope: -(calcs.pp1)/(calcs.pp2)
          color: DarkGreen
          strokeWidth: 2
          max: 6
      - Point:
          coordinates: [(params.m)/(calcs.pp1), 0]
          droplines: {vertical: (params.m)/(calcs.pp1), horizontal: }
          color: black
          r: 0
      - Point:
          coordinates: [0, (params.m)/(calcs.pp2)]
          droplines: {vertical: , horizontal: (params.m)/(calcs.pp2)}
          color: black
          r: 0

      # Affordable bundles
      - Area:
          fn: (params.m) / (calcs.pp2) - ((calcs.pp1)*(x)) / (calcs.pp2)
          fill: green
          above: false
            
      # Bundle
      - Point:
          coordinates: [params.x1, params.x2]
          droplines:
            horizontal: params.x2.toFixed(1)
            vertical: params.x1.toFixed(1)
          color: Blue
          r: 5
          draggable: true
      - Label:
          coordinates: [params.x1, params.x2+0.1]
          text: "` ( ${params.x1.toFixed(1)} , ${params.x2.toFixed(1)} ) `"
          position: l
          color: Blue
          bgcolor: none
              
# Overlap Evaluation
      - Label:
          coordinates: [4.3, 4.2]
          text: \text{\large No sovrapp.}
          position: r
          bgcolor: none
      # interior solution
      - Label:
          coordinates: [4.3, 4.2]
          text: \LARGE\checkmark
          position: bl
          bgcolor: none
          color: green
          show: calcs.u >= 20 && calcs.interiorcheck == 0
      - Label:
          coordinates: [4.3, 4.2]
          text: \LARGE{\boldsymbol\times}
          position: bl
          bgcolor: none
          color: red
          show: calcs.u < 20 && calcs.interiorcheck == 0
      # corner X solution
      - Label:
          coordinates: [4.3, 4.2]
          text: \LARGE\checkmark
          position: bl
          bgcolor: none
          color: green
          show: calcs.u >= 16 && calcs.cornerXcheck !== 0
      - Label:
          coordinates: [4.3, 4.2]
          text: \LARGE{\boldsymbol\times}
          position: bl
          bgcolor: none
          color: red
          show: calcs.u < 16 && calcs.cornerXcheck !== 0
      # corner Y solution
      - Label:
          coordinates: [4.3, 4.2]
          text: \LARGE\checkmark
          position: bl
          bgcolor: none
          color: green
          show: calcs.u >= 16 && calcs.cornerYcheck !== 0
      - Label:
          coordinates: [4.3, 4.2]
          text: \LARGE{\boldsymbol\times}
          position: bl
          bgcolor: none
          color: red
          show: calcs.u < 16 && calcs.cornerYcheck !== 0



# Affordability Evaluation
      - Label:
          coordinates: [4.3, 3.8]
          text: \text{\large Accessibile}
          position: r
          bgcolor: none
          
      - Label:
          coordinates: [4.3, 3.8]
          text: \LARGE\checkmark
          position: bl
          bgcolor: none
          color: green
          show: calcs.cost <= params.m

      - Label:
          coordinates: [4.3, 3.8]
          text: \LARGE{\boldsymbol\times}
          position: bl
          bgcolor: none
          color: red
          show: calcs.cost > params.m

# BINGO
      # interior solution
      - Label:
          coordinates: [4.7, 2.2]
          text: \text{\LARGE BINGO!}
          color: green
          position: r
          bgcolor: none
          show: calcs.cost <= params.m && calcs.u >= 20 && calcs.interiorcheck == 0
      # corner X solution
      - Label:
          coordinates: [4.7, 2.2]
          text: \text{\LARGE BINGO!}
          color: green
          position: r
          bgcolor: none
          show: calcs.cost <= params.m && calcs.u >= 16 && calcs.cornerXcheck !== 0
      # corner Y solution
      - Label:
          coordinates: [4.7, 2.2]
          text: \text{\LARGE BINGO!}
          color: green
          position: r
          bgcolor: none
          show: calcs.cost <= params.m && calcs.u >= 16 && calcs.cornerYcheck !== 0






    explanation:
      divs:
        - html: "` La funzione di utilità del consumatore è 
                  $U(X,Y)=XY+4(X+Y)$,
                     dove $X$ e $Y$ indicano rispettivamente il consumo settimanale di mele
                      e arance (entrambe misurate in chili). 
                    Il consumatore ha un reddito settimanale di  $M=8$ euro. Mele e arance si
                   vendono rispettivamente a $P_X=${calcs.pp1}$ euro/kg e $P_Y=${calcs.pp2}$ euro/kg.  
                  La figura mostra i panieri accessibili  (area verde), un generico paniere (punto blu), 
                  la curva di indifferenza che passa per quel paniere,
                     e l'insieme dei panieri ad esso preferiti 
                     (area rosa).  `"


    sidebar:
      controls:
      - title: Scelta ottima del consumatore
        radioGroup:
          param: which
          options:
            - Sia mele che arance costano 2 €/kg 
            - Aumenta il prezzo delle mele a 5 €/kg
            - Aumenta il prezzo delle arance a 5 €/kg
        # sliders:
        # - param: p1
        #   label: P_X
        # - param: p2
        #   label: P_Y

        divs:

          - html: "` `"
          - html: "` `"
          - html: "` L'insieme dei panieri preferiti al paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$
                    non si sovrappone all'insieme dei panieri accessibili.                 `"
            show: calcs.u >= 20 && calcs.interiorcheck == 0

          - html: "` L'insieme dei panieri preferiti al paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$
                    non si sovrappone all'insieme dei panieri accessibili.                  `"
            show: calcs.u >= 16 && (calcs.cornerXcheck)+(calcs.cornerYcheck) !== 0

          - html: "` `"

          - html: "` Tuttavia, il paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$ non è accessibile, dato che
                    $$ ${calcs.pp1}*${params.x1.toFixed(1)}+${calcs.pp2}*${params.x2.toFixed(1)} > ${params.m} .$$
                    Prova a spostare il paniere fino ad un punto dove è accessibile.                      `"
            show: calcs.u >= 20 && calcs.interiorcheck == 0 && calcs.cost > params.m

          - html: "` Tuttavia, il paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$ non è accessibile, dato che
                    $$ ${calcs.pp1}*${params.x1.toFixed(1)}+${calcs.pp2}*${params.x2.toFixed(1)} > ${params.m} .$$
                    Prova a spostare il paniere fino ad un punto dove è accessibile.                      `"
            show: calcs.u >= 16 && (calcs.cornerXcheck)+(calcs.cornerYcheck) !== 0 && calcs.cost > params.m

          - html: "` Inoltre, il paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$ è accessibile, dato che
                    $$ ${calcs.pp1}*${params.x1.toFixed(1)}+${calcs.pp2}*${params.x2.toFixed(1)} \\\\leq ${params.m} .$$
                    Hai individuato la scelta ottima del consumatore! `"
            show: calcs.u >= 20 && calcs.interiorcheck == 0 && calcs.cost <= params.m

          - html: "` Inoltre, il paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$ è accessibile, dato che
                    $$ ${calcs.pp1}*${params.x1.toFixed(1)}+${calcs.pp2}*${params.x2.toFixed(1)} \\\\leq ${params.m} .$$
                    Hai individuato la scelta ottima del consumatore! `"
            show: calcs.u >= 16 && (calcs.cornerXcheck)+(calcs.cornerYcheck) !== 0 && calcs.cost <= params.m



          - html: "` Il paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$  è accessibile, dato che
                    $$ ${calcs.pp1}*${params.x1.toFixed(1)}+${calcs.pp2}*${params.x2.toFixed(1)} \\\\leq ${params.m} .$$                `"
            show: calcs.u < 20 && calcs.interiorcheck == 0 && calcs.cost <= params.m

          - html: "` Il paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$  è accessibile, dato che
                    $$ ${calcs.pp1}*${params.x1.toFixed(1)}+${calcs.pp2}*${params.x2.toFixed(1)} \\\\leq ${params.m} .$$                `"
            show: calcs.u < 16 && (calcs.cornerXcheck)+(calcs.cornerYcheck) !== 0 && calcs.cost <= params.m

          - html: "` `"

          - html: "` Tuttavia, l'insieme dei panieri preferiti al paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$
                    si sovrappone all'insieme dei panieri accessibili. Ciò significa che qualche altro
                    paniere è sia accessibile sia preferito al paniere  $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$.
                    Dunque $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$ non è la scelta ottima del consumatore.                  `"
            show: calcs.u < 20 && calcs.interiorcheck == 0 && calcs.cost <= params.m

          - html: "` Tuttavia, l'insieme dei panieri preferiti al paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$
                    si sovrappone all'insieme dei panieri accessibili. Ciò significa che qualche altro
                    paniere è sia accessibile sia preferito al paniere  $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$.
                    Dunque $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$ non è la scelta ottima del consumatore.                  `"
            show: calcs.u < 16 && (calcs.cornerXcheck)+(calcs.cornerYcheck) !== 0 && calcs.cost <= params.m


          - html: "` Il paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$ non è accessibile, dato che
                    $$ ${calcs.pp1}*${params.x1.toFixed(1)}+${calcs.pp2}*${params.x2.toFixed(1)} > ${params.m} .$$                `"
            show: calcs.u < 20 && calcs.interiorcheck == 0 && calcs.cost > params.m

          - html: "` Il paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$ non è accessibile, dato che
                    $$ ${calcs.pp1}*${params.x1.toFixed(1)}+${calcs.pp2}*${params.x2.toFixed(1)} > ${params.m} .$$                `"
            show: calcs.u < 16 && (calcs.cornerXcheck)+(calcs.cornerYcheck) !== 0 && calcs.cost > params.m

          - html: "` `"

          - html: "` Inoltre, l'insieme dei panieri preferiti al paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$
                    si sovrappone all'insieme dei panieri accessibili. Ciò significa che qualche altro
                    paniere è sia accessibile sia preferito al paniere  $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$.
                                      `"
            show: calcs.u < 20 && calcs.interiorcheck == 0 && calcs.cost > params.m
          - html: "` Prova a spostare il paniere fino ad un punto dove è accessibile e non c'è
                    sovrapposizione.
                     `"
            show: calcs.u < 20 && calcs.interiorcheck == 0 && calcs.cost > params.m

          - html: "` Inoltre, l'insieme dei panieri preferiti al paniere $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$
                    si sovrappone all'insieme dei panieri accessibili. Ciò significa che qualche altro
                    paniere è sia accessibile sia preferito al paniere  $(${params.x1.toFixed(1)},${params.x2.toFixed(1)})$.
                                      `"
            show: calcs.u < 16 && (calcs.cornerXcheck)+(calcs.cornerYcheck) !== 0 && calcs.cost > params.m
          - html: "` Prova a spostare il paniere fino ad un punto dove è accessibile e non c'è
                    sovrapposizione.
                     `"
            show: calcs.u < 16 && (calcs.cornerXcheck)+(calcs.cornerYcheck) !== 0 && calcs.cost > params.m
















