---
schema: EconSchema
version: 1
aspectRatio: 0.65
params:

- {name: p1, value: 10}
- {name: p1new, value: 20}
- {name: p2, value: 10}
- {name: m, value: 1200}

- {name: a, value: 1}
- {name: b, value: 1}

- {name: showMORE, value: false}
- {name: showLESS, value: false}

calcs:
  s1: (params.a)/((params.a)+(params.b)) # share of income spent on good 1
  s2: (1)-(calcs.s1) # share of income spent on good 2
  x1old: (calcs.s1)*(params.m)/(params.p1) # optimal qty good 1 at old prices
  x2old: (calcs.s2)*(params.m)/(params.p2) # optimal qty good 2 at old prices
  uold: ((calcs.x1old)^(params.a))*((calcs.x2old)^(params.b)) # max utility at old prices

  x1new: (calcs.s1)*(params.m)/(params.p1new) # optimal qty good 1 at new prices
  x2new: (calcs.s2)*(params.m)/(params.p2) # optimal qty good 2 at new prices
  unew: ((calcs.x1new)^(params.a))*((calcs.x2new)^(params.b)) # max utility at new prices

  deltaCS: (calcs.s1)*(params.m)*log((params.p1new)/(params.p1))
  CV: ((calcs.uold)^(1/((params.a)+(params.b))))/((((calcs.s1)/(params.p1new))^(calcs.s1))*(((calcs.s2)/(params.p2))^(calcs.s2)))-(params.m)


#   u1: (10^(params.a))*(10^(params.b))
#   u2: (20^(params.a))*(20^(params.b))
#   u3: (30^(params.a))*(30^(params.b))
#   u4: (40^(params.a))*(40^(params.b))
#   u5: (50^(params.a))*(50^(params.b))
#   u6: (60^(params.a))*(60^(params.b))
#   u7: (70^(params.a))*(70^(params.b))
#   u8: (80^(params.a))*(80^(params.b))
#   u9: (90^(params.a))*(90^(params.b))
#   u10: (100^(params.a))*(100^(params.b))
#   u11: (110^(params.a))*(110^(params.b))
#   u12: (120^(params.a))*(120^(params.b))

layout:
  TwoVerticalGraphsPlusSidebar:

    topGraph:
      xAxis:
        max: 125
        ticks: 0
      yAxis:
        max: 150
        ticks: 0
      objects:

      - Label:
            coordinates: [125, 0]
            text: "` \\\\text{Cibo (kg)} `"
            yPixelOffset: 0
            position: l
      - Label:
            coordinates: [0, 150]
            text: "` \\\\text{Affitto ($\\\\text{m}^2$)}  `"
            yPixelOffset: 0

# old optimal bundle
      - Point:
          coordinates: [calcs.x1old, calcs.x2old]
          droplines:
            horizontal: calcs.x2old.toFixed(0)
            vertical: calcs.x1old.toFixed(0)
          color: Blue
          r: 3
      - Label:
          coordinates: [calcs.x1old+3, calcs.x2old+4]
          text: "` A `"
#          position: l
          color: Blue
          bgcolor: none

# indifference curve at old optimal bundle
      - Curve:
          fn: ((calcs.uold)/((x)^(params.a)))^(1/(params.b))
          color: Black
          strokeWidth: 1
      
# old budget constraint 
      - Line:
          yIntercept: (params.m)/(params.p2)
          slope: -(params.p1)/(params.p2)
          color: Blue
          strokeWidth: 1
      - Point:
          coordinates: [(params.m)/(params.p1), 0]
          droplines:
            vertical: (params.m)/(params.p1)
          color: Blue
          r: 0
      - Point:
          coordinates: [0,(params.m)/(params.p2)]
          droplines:
            horizontal: (params.m)/(params.p2)
          color: Blue
          r: 0
      
# new budget constraint 
      - Line:
          yIntercept: (params.m)/(params.p2)
          slope: -(params.p1new)/(params.p2)
          color: Blue
          strokeWidth: 1
      - Point:
          coordinates: [(params.m)/(params.p1new), 0]
          droplines:
            vertical: (params.m)/(params.p1new)
          color: Blue
          r: 0

# new optimal bundle
      - Point:
          coordinates: [calcs.x1new, calcs.x2new]
          droplines:
            horizontal: calcs.x2new.toFixed(0)
            vertical: calcs.x1new.toFixed(0)
          color: Blue
          r: 3
      - Label:
          coordinates: [calcs.x1new-4, calcs.x2new-5]
          text: "` B `"
#          position: l
          color: Blue
          bgcolor: none

# indifference curve at new optimal bundle
      - Curve:
          fn: ((calcs.unew)/((x)^(params.a)))^(1/(params.b))
          color: Black
          strokeWidth: 1

# compensated budget constraint 
      - Line:
          yIntercept: ((params.m)+(calcs.CV))/(params.p2)
          slope: -(params.p1new)/(params.p2)
          color: Red
          strokeWidth: 1





    bottomGraph:
      xAxis:
        max: 125
        ticks: 0
      yAxis:
        max: 25
        ticks: 0
      objects:

      - Label:
            coordinates: [125, 0]
            text: "` \\\\text{Cibo (kg)} `"
            yPixelOffset: 0
            position: l
      - Label:
            coordinates: [0, 25]
            text: "` \\\\text{â‚¬/kg}  `"
            yPixelOffset: 0

# inverse demand for good 1
      - Curve:
          fn: (calcs.s1)*(params.m)/(x)
          color: Blue
          strokeWidth: 1.5

# old demand for good 1
      - Point:
          coordinates: [calcs.x1old, params.p1]
          droplines:
            horizontal: params.p1
            vertical: calcs.x1old.toFixed(0)
          color: Blue
          r: 3.5
      - Label:
          coordinates: [(1.05)*(calcs.x1old), (1.05)*(params.p1)]
          text: "` A `"
#          position: l
          color: Blue
          bgcolor: none

# new demand for good 1
      - Point:
          coordinates: [calcs.x1new, params.p1new]
          droplines:
            horizontal: params.p1new
            vertical: calcs.x1new.toFixed(0)
          color: Blue
          r: 3.5
      - Label:
          coordinates: [(1.08)*(calcs.x1new), (1.03)*(params.p1new)]
          text: "` B `"
#          position: l
          color: Blue
          bgcolor: none




    sidebar:
      controls:

      - title: Scelta ottima del consumatore

        # checkboxes:
        # - param: showMORE
        #   label: "\\text{Mostra panieri preferiti ad $A$}"
        # - param: showLESS
        #   label: "\\text{Mostra panieri meno preferiti di $A$}"

        # sliders:
        # - param: a
        #   label: a
        # - param: b
        #   label: b

        divs:
          - html: "` ${calcs.CV} `"
            show: calcs.uold > 0











